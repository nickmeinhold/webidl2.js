[inline]: [
[identifier]: NoDelete
[inline]: ]
[inline]: interface
[identifier]: b2Contact
[inline]: {
[identifier]: b2Manifold
[identifier]: GetManifold
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: GetWorldManifold
[inline]: (
[identifier]: b2WorldManifold
[identifier]: manifold
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsTouching
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetEnabled
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsEnabled
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Contact
[identifier]: GetNext
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Fixture
[identifier]: GetFixtureA
[inline]: (
[inline]: )
[inline]: ;
[inline]: long
[identifier]: GetChildIndexA
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Fixture
[identifier]: GetFixtureB
[inline]: (
[inline]: )
[inline]: ;
[inline]: long
[identifier]: GetChildIndexB
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetFriction
[inline]: (
[inline]: float
[identifier]: friction
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetFriction
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ResetFriction
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetRestitution
[inline]: (
[inline]: float
[identifier]: restitution
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetRestitution
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ResetRestitution
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetRestitutionThreshold
[inline]: (
[inline]: float
[identifier]: threshold
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetRestitutionThreshold
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ResetRestitutionThreshold
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetTangentSpeed
[inline]: (
[inline]: float
[identifier]: speed
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetTangentSpeed
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2ContactListener
[inline]: {
[inline]: }
[inline]: ;
[inline]: [
[identifier]: JSImplementation
[inline]: =
[string]: "b2ContactListener"
[inline]: ]
[inline]: interface
[identifier]: JSContactListener
[inline]: {
[inline]: void
[identifier]: JSContactListener
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: BeginContact
[inline]: (
[identifier]: b2Contact
[identifier]: contact
[inline]: )
[inline]: ;
[inline]: void
[identifier]: EndContact
[inline]: (
[identifier]: b2Contact
[identifier]: contact
[inline]: )
[inline]: ;
[inline]: void
[identifier]: PreSolve
[inline]: (
[identifier]: b2Contact
[identifier]: contact
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2Manifold
[identifier]: oldManifold
[inline]: )
[inline]: ;
[inline]: void
[identifier]: PostSolve
[inline]: (
[identifier]: b2Contact
[identifier]: contact
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2ContactImpulse
[identifier]: impulse
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2World
[inline]: {
[inline]: void
[identifier]: b2World
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: gravity
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetDestructionListener
[inline]: (
[identifier]: b2DestructionListener
[identifier]: listener
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetContactFilter
[inline]: (
[identifier]: JSContactFilter
[identifier]: filter
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetContactListener
[inline]: (
[identifier]: JSContactListener
[identifier]: listener
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetDebugDraw
[inline]: (
[identifier]: b2Draw
[identifier]: debugDraw
[inline]: )
[inline]: ;
[identifier]: b2Body
[identifier]: CreateBody
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2BodyDef
[identifier]: def
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DestroyBody
[inline]: (
[identifier]: b2Body
[identifier]: body
[inline]: )
[inline]: ;
[identifier]: b2Joint
[identifier]: CreateJoint
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2JointDef
[identifier]: def
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DestroyJoint
[inline]: (
[identifier]: b2Joint
[identifier]: joint
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Step
[inline]: (
[inline]: float
[identifier]: timeStep
[inline]: ,
[inline]: long
[identifier]: velocityIterations
[inline]: ,
[inline]: long
[identifier]: positionIterations
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ClearForces
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DebugDraw
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: QueryAABB
[inline]: (
[identifier]: b2QueryCallback
[inline]: callback
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2AABB
[identifier]: aabb
[inline]: )
[inline]: ;
[inline]: void
[identifier]: RayCast
[inline]: (
[identifier]: b2RayCastCallback
[inline]: callback
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: point1
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: point2
[inline]: )
[inline]: ;
[identifier]: b2Body
[identifier]: GetBodyList
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Joint
[identifier]: GetJointList
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Contact
[identifier]: GetContactList
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetAllowSleeping
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: GetAllowSleeping
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetWarmStarting
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: GetWarmStarting
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetContinuousPhysics
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: GetContinuousPhysics
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetSubStepping
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: GetSubStepping
[inline]: (
[inline]: )
[inline]: ;
[inline]: long
[identifier]: GetProxyCount
[inline]: (
[inline]: )
[inline]: ;
[inline]: long
[identifier]: GetBodyCount
[inline]: (
[inline]: )
[inline]: ;
[inline]: long
[identifier]: GetJointCount
[inline]: (
[inline]: )
[inline]: ;
[inline]: long
[identifier]: GetContactCount
[inline]: (
[inline]: )
[inline]: ;
[inline]: long
[identifier]: GetTreeHeight
[inline]: (
[inline]: )
[inline]: ;
[inline]: long
[identifier]: GetTreeBalance
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetTreeQuality
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetGravity
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: gravity
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetGravity
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsLocked
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetAutoClearForces
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: GetAutoClearForces
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Profile
[identifier]: GetProfile
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Dump
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: enum
[identifier]: b2ShapeType
[inline]: {
[string]: "b2Shape::e_circle"
[inline]: ,
[string]: "b2Shape::e_edge"
[inline]: ,
[string]: "b2Shape::e_polygon"
[inline]: ,
[string]: "b2Shape::e_chain"
[inline]: ,
[string]: "b2Shape::e_typeCount"
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Shape
[inline]: {
[identifier]: b2ShapeType
[identifier]: GetType
[inline]: (
[inline]: )
[inline]: ;
[inline]: long
[identifier]: GetChildCount
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: TestPoint
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Transform
[identifier]: xf
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: p
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: RayCast
[inline]: (
[identifier]: b2RayCastOutput
[identifier]: output
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2RayCastInput
[identifier]: input
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Transform
[identifier]: transform
[inline]: ,
[inline]: long
[identifier]: childIndex
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ComputeAABB
[inline]: (
[identifier]: b2AABB
[identifier]: aabb
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Transform
[identifier]: xf
[inline]: ,
[inline]: long
[identifier]: childIndex
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ComputeMass
[inline]: (
[identifier]: b2MassData
[identifier]: massData
[inline]: ,
[inline]: float
[identifier]: density
[inline]: )
[inline]: ;
[inline]: attribute
[identifier]: b2ShapeType
[identifier]: m_type
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: m_radius
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2FixtureUserData
[inline]: {
[inline]: attribute
[inline]: unsigned
[inline]: long
[identifier]: pointer
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2FixtureDef
[inline]: {
[inline]: void
[identifier]: b2FixtureDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ]
[inline]: attribute
[identifier]: b2Shape
[identifier]: shape
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2FixtureUserData
[identifier]: userData
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: friction
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: restitution
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: restitutionThreshold
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: density
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: isSensor
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Filter
[identifier]: filter
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Fixture
[inline]: {
[identifier]: b2ShapeType
[identifier]: GetType
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Shape
[identifier]: GetShape
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetSensor
[inline]: (
[inline]: boolean
[identifier]: sensor
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsSensor
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetFilterData
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Filter
[identifier]: filter
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Filter
[identifier]: GetFilterData
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Refilter
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Body
[identifier]: GetBody
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Fixture
[identifier]: GetNext
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2FixtureUserData
[identifier]: GetUserData
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: TestPoint
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: p
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: RayCast
[inline]: (
[identifier]: b2RayCastOutput
[identifier]: output
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2RayCastInput
[identifier]: input
[inline]: ,
[inline]: long
[identifier]: childIndex
[inline]: )
[inline]: ;
[inline]: void
[identifier]: GetMassData
[inline]: (
[identifier]: b2MassData
[identifier]: massData
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetDensity
[inline]: (
[inline]: float
[identifier]: density
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetDensity
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetFriction
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetFriction
[inline]: (
[inline]: float
[identifier]: friction
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetRestitution
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetRestitution
[inline]: (
[inline]: float
[identifier]: restitution
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetRestitutionThreshold
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetRestitutionThreshold
[inline]: (
[inline]: float
[identifier]: threshold
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2AABB
[identifier]: GetAABB
[inline]: (
[inline]: long
[identifier]: childIndex
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Dump
[inline]: (
[inline]: long
[identifier]: bodyIndex
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Transform
[inline]: {
[inline]: void
[identifier]: b2Transform
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: b2Transform
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: position
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Rot
[identifier]: rotation
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetIdentity
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Set
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: position
[inline]: ,
[inline]: float
[identifier]: angle
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: p
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Rot
[identifier]: q
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2RayCastCallback
[inline]: {
[inline]: }
[inline]: ;
[inline]: [
[identifier]: JSImplementation
[inline]: =
[string]: "b2RayCastCallback"
[inline]: ]
[inline]: interface
[identifier]: JSRayCastCallback
[inline]: {
[inline]: void
[identifier]: JSRayCastCallback
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: ReportFixture
[inline]: (
[identifier]: b2Fixture
[identifier]: fixture
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: point
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: normal
[inline]: ,
[inline]: float
[identifier]: fraction
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2QueryCallback
[inline]: {
[inline]: }
[inline]: ;
[inline]: [
[identifier]: JSImplementation
[inline]: =
[string]: "b2QueryCallback"
[inline]: ]
[inline]: interface
[identifier]: JSQueryCallback
[inline]: {
[inline]: void
[identifier]: JSQueryCallback
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: ReportFixture
[inline]: (
[identifier]: b2Fixture
[identifier]: fixture
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2MassData
[inline]: {
[inline]: void
[identifier]: b2MassData
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: mass
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: center
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: I
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Vec2
[inline]: {
[inline]: void
[identifier]: b2Vec2
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: b2Vec2
[inline]: (
[inline]: float
[identifier]: x
[inline]: ,
[inline]: float
[identifier]: y
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetZero
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Set
[inline]: (
[inline]: float
[identifier]: x
[inline]: ,
[inline]: float
[identifier]: y
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Operator
[inline]: =
[string]: "+="
[inline]: ]
[inline]: void
[identifier]: op_add
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: v
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Operator
[inline]: =
[string]: "-="
[inline]: ]
[inline]: void
[identifier]: op_sub
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: v
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Operator
[inline]: =
[string]: "*="
[inline]: ]
[inline]: void
[identifier]: op_mul
[inline]: (
[inline]: float
[identifier]: s
[inline]: )
[inline]: ;
[inline]: float
[identifier]: Length
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: LengthSquared
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: Normalize
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsValid
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: Skew
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: x
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: y
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Vec3
[inline]: {
[inline]: void
[identifier]: b2Vec3
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: b2Vec3
[inline]: (
[inline]: float
[identifier]: x
[inline]: ,
[inline]: float
[identifier]: y
[inline]: ,
[inline]: float
[identifier]: z
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetZero
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Set
[inline]: (
[inline]: float
[identifier]: x
[inline]: ,
[inline]: float
[identifier]: y
[inline]: ,
[inline]: float
[identifier]: z
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Operator
[inline]: =
[string]: "+="
[inline]: ]
[inline]: void
[identifier]: op_add
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec3
[identifier]: v
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Operator
[inline]: =
[string]: "-="
[inline]: ]
[inline]: void
[identifier]: op_sub
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec3
[identifier]: v
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Operator
[inline]: =
[string]: "*="
[inline]: ]
[inline]: void
[identifier]: op_mul
[inline]: (
[inline]: float
[identifier]: s
[inline]: )
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: x
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: y
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: z
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2BodyUserData
[inline]: {
[inline]: attribute
[inline]: unsigned
[inline]: long
[identifier]: pointer
[inline]: ;
[inline]: }
[inline]: ;
[inline]: [
[identifier]: NoDelete
[inline]: ]
[inline]: interface
[identifier]: b2Body
[inline]: {
[identifier]: b2Fixture
[identifier]: CreateFixture
[inline]: (
[identifier]: b2FixtureDef
[identifier]: def
[inline]: )
[inline]: ;
[identifier]: b2Fixture
[identifier]: CreateFixture
[inline]: (
[identifier]: b2Shape
[identifier]: shape
[inline]: ,
[inline]: float
[identifier]: density
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DestroyFixture
[inline]: (
[identifier]: b2Fixture
[identifier]: fixture
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetTransform
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: position
[inline]: ,
[inline]: float
[identifier]: angle
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Transform
[identifier]: GetTransform
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetPosition
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetAngle
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetWorldCenter
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalCenter
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetLinearVelocity
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: v
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLinearVelocity
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetAngularVelocity
[inline]: (
[inline]: float
[identifier]: omega
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetAngularVelocity
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ApplyForce
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: force
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: point
[inline]: ,
[inline]: boolean
[identifier]: wake
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ApplyForceToCenter
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: force
[inline]: ,
[inline]: boolean
[identifier]: wake
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ApplyTorque
[inline]: (
[inline]: float
[identifier]: torque
[inline]: ,
[inline]: boolean
[identifier]: awake
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ApplyLinearImpulse
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: impulse
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: point
[inline]: ,
[inline]: boolean
[identifier]: wake
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ApplyLinearImpulseToCenter
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: impulse
[inline]: ,
[inline]: boolean
[identifier]: wake
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ApplyAngularImpulse
[inline]: (
[inline]: float
[identifier]: impulse
[inline]: ,
[inline]: boolean
[identifier]: wake
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMass
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetInertia
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: GetMassData
[inline]: (
[identifier]: b2MassData
[identifier]: data
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMassData
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2MassData
[identifier]: data
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ResetMassData
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetWorldPoint
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: localPoint
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetWorldVector
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: localVector
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalPoint
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: worldPoint
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalVector
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: worldVector
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLinearVelocityFromWorldPoint
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: worldPoint
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLinearVelocityFromLocalPoint
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: localPoint
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetLinearDamping
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetLinearDamping
[inline]: (
[inline]: float
[identifier]: linearDamping
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetAngularDamping
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetAngularDamping
[inline]: (
[inline]: float
[identifier]: angularDamping
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetGravityScale
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetGravityScale
[inline]: (
[inline]: float
[identifier]: scale
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetType
[inline]: (
[identifier]: b2BodyType
[identifier]: type
[inline]: )
[inline]: ;
[identifier]: b2BodyType
[identifier]: GetType
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetBullet
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsBullet
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetSleepingAllowed
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsSleepingAllowed
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetAwake
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsAwake
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetEnabled
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsEnabled
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetFixedRotation
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsFixedRotation
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Fixture
[identifier]: GetFixtureList
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2JointEdge
[identifier]: GetJointList
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2ContactEdge
[identifier]: GetContactList
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Body
[identifier]: GetNext
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2BodyUserData
[identifier]: GetUserData
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2World
[identifier]: GetWorld
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Dump
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: enum
[identifier]: b2BodyType
[inline]: {
[string]: "b2_staticBody"
[inline]: ,
[string]: "b2_kinematicBody"
[inline]: ,
[string]: "b2_dynamicBody"
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2BodyDef
[inline]: {
[inline]: void
[identifier]: b2BodyDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[identifier]: b2BodyType
[identifier]: type
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: position
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: angle
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: linearVelocity
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: angularVelocity
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: linearDamping
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: angularDamping
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: allowSleep
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: awake
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: fixedRotation
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: bullet
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: enabled
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2BodyUserData
[identifier]: userData
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: gravityScale
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Filter
[inline]: {
[inline]: void
[identifier]: b2Filter
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[inline]: unsigned
[inline]: short
[identifier]: categoryBits
[inline]: ;
[inline]: attribute
[inline]: unsigned
[inline]: short
[identifier]: maskBits
[inline]: ;
[inline]: attribute
[inline]: short
[identifier]: groupIndex
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2AABB
[inline]: {
[inline]: void
[identifier]: b2AABB
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsValid
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetCenter
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetExtents
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetPerimeter
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Combine
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2AABB
[identifier]: aabb
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Combine
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2AABB
[identifier]: aabb1
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2AABB
[identifier]: aabb2
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: Contains
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2AABB
[identifier]: aabb
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: RayCast
[inline]: (
[identifier]: b2RayCastOutput
[identifier]: output
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2RayCastInput
[identifier]: input
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: lowerBound
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: upperBound
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2CircleShape
[inline]: {
[inline]: void
[identifier]: b2CircleShape
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: m_p
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2CircleShape
[identifier]: implements
[identifier]: b2Shape
[inline]: ;
[inline]: interface
[identifier]: b2EdgeShape
[inline]: {
[inline]: void
[identifier]: b2EdgeShape
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetOneSided
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: v0
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: v1
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: v2
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: v3
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetTwoSided
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: v1
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: v2
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: m_vertex1
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: m_vertex2
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: m_vertex0
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: m_vertex3
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: m_oneSided
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2EdgeShape
[identifier]: implements
[identifier]: b2Shape
[inline]: ;
[inline]: enum
[identifier]: b2JointType
[inline]: {
[string]: "e_unknownJoint"
[inline]: ,
[string]: "e_revoluteJoint"
[inline]: ,
[string]: "e_prismaticJoint"
[inline]: ,
[string]: "e_distanceJoint"
[inline]: ,
[string]: "e_pulleyJoint"
[inline]: ,
[string]: "e_mouseJoint"
[inline]: ,
[string]: "e_gearJoint"
[inline]: ,
[string]: "e_wheelJoint"
[inline]: ,
[string]: "e_weldJoint"
[inline]: ,
[string]: "e_frictionJoint"
[inline]: ,
[string]: "e_ropeJoint"
[inline]: ,
[string]: "e_motorJoint"
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2JointUserData
[inline]: {
[inline]: attribute
[inline]: unsigned
[inline]: long
[identifier]: pointer
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2JointDef
[inline]: {
[inline]: void
[identifier]: b2JointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[identifier]: b2JointType
[identifier]: type
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2JointUserData
[identifier]: userData
[inline]: ;
[inline]: attribute
[identifier]: b2Body
[identifier]: bodyA
[inline]: ;
[inline]: attribute
[identifier]: b2Body
[identifier]: bodyB
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: collideConnected
[inline]: ;
[inline]: }
[inline]: ;
[inline]: [
[identifier]: NoDelete
[inline]: ]
[inline]: interface
[identifier]: b2Joint
[inline]: {
[identifier]: b2JointType
[identifier]: GetType
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Body
[identifier]: GetBodyA
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Body
[identifier]: GetBodyB
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetAnchorA
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetAnchorB
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetReactionForce
[inline]: (
[inline]: float
[identifier]: inv_dt
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetReactionTorque
[inline]: (
[inline]: float
[identifier]: inv_dt
[inline]: )
[inline]: ;
[identifier]: b2Joint
[identifier]: GetNext
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2JointUserData
[identifier]: GetUserData
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: GetCollideConnected
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Dump
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2WeldJoint
[inline]: {
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorA
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorB
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetReferenceAngle
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetStiffness
[inline]: (
[inline]: float
[identifier]: stiffness
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetStiffness
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetDamping
[inline]: (
[inline]: float
[identifier]: damping
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetDamping
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Dump
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2WeldJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2WeldJointDef
[inline]: {
[inline]: void
[identifier]: b2WeldJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Initialize
[inline]: (
[identifier]: b2Body
[identifier]: bodyA
[inline]: ,
[identifier]: b2Body
[identifier]: bodyB
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: anchor
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorA
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorB
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: referenceAngle
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: stiffness
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: damping
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2WeldJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: interface
[identifier]: b2ChainShape
[inline]: {
[inline]: void
[identifier]: b2ChainShape
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Clear
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: CreateLoop
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2Vec2
[identifier]: vertices
[inline]: ,
[inline]: long
[identifier]: count
[inline]: )
[inline]: ;
[inline]: void
[identifier]: CreateChain
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2Vec2
[identifier]: vertices
[inline]: ,
[inline]: long
[identifier]: count
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: prevVertex
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: nextVertex
[inline]: )
[inline]: ;
[inline]: void
[identifier]: GetChildEdge
[inline]: (
[identifier]: b2EdgeShape
[identifier]: edge
[inline]: ,
[inline]: long
[identifier]: index
[inline]: )
[inline]: ;
[inline]: attribute
[identifier]: b2Vec2
[identifier]: m_vertices
[inline]: ;
[inline]: attribute
[inline]: long
[identifier]: m_count
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: m_prevVertex
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: m_nextVertex
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2ChainShape
[identifier]: implements
[identifier]: b2Shape
[inline]: ;
[inline]: interface
[identifier]: b2Color
[inline]: {
[inline]: void
[identifier]: b2Color
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: b2Color
[inline]: (
[inline]: float
[identifier]: r
[inline]: ,
[inline]: float
[identifier]: g
[inline]: ,
[inline]: float
[identifier]: b
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Set
[inline]: (
[inline]: float
[identifier]: ri
[inline]: ,
[inline]: float
[identifier]: gi
[inline]: ,
[inline]: float
[identifier]: bi
[inline]: )
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: r
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: g
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: b
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2ContactEdge
[inline]: {
[inline]: void
[identifier]: b2ContactEdge
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[identifier]: b2Body
[identifier]: other
[inline]: ;
[inline]: attribute
[identifier]: b2Contact
[identifier]: contact
[inline]: ;
[inline]: attribute
[identifier]: b2ContactEdge
[identifier]: prev
[inline]: ;
[inline]: attribute
[identifier]: b2ContactEdge
[identifier]: next
[inline]: ;
[inline]: }
[inline]: ;
[inline]: enum
[identifier]: b2ContactFeatureType
[inline]: {
[string]: "b2ContactFeature::e_vertex"
[inline]: ,
[string]: "b2ContactFeature::e_face"
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2ContactFeature
[inline]: {
[inline]: attribute
[inline]: octet
[identifier]: indexA
[inline]: ;
[inline]: attribute
[inline]: octet
[identifier]: indexB
[inline]: ;
[inline]: attribute
[inline]: octet
[identifier]: typeA
[inline]: ;
[inline]: attribute
[inline]: octet
[identifier]: typeB
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2ContactFilter
[inline]: {
[inline]: }
[inline]: ;
[inline]: [
[identifier]: JSImplementation
[inline]: =
[string]: "b2ContactFilter"
[inline]: ]
[inline]: interface
[identifier]: JSContactFilter
[inline]: {
[inline]: void
[identifier]: JSContactFilter
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: ShouldCollide
[inline]: (
[identifier]: b2Fixture
[identifier]: fixtureA
[inline]: ,
[identifier]: b2Fixture
[identifier]: fixtureB
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2ContactID
[inline]: {
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2ContactFeature
[identifier]: cf
[inline]: ;
[inline]: attribute
[inline]: unsigned
[inline]: long
[identifier]: key
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2ContactImpulse
[inline]: {
[inline]: [
[identifier]: BoundsChecked
[inline]: ]
[inline]: attribute
[inline]: float
[inline]: [
[inline]: ]
[identifier]: normalImpulses
[inline]: ;
[inline]: [
[identifier]: BoundsChecked
[inline]: ]
[inline]: attribute
[inline]: float
[inline]: [
[inline]: ]
[identifier]: tangentImpulses
[inline]: ;
[inline]: attribute
[inline]: long
[identifier]: count
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2DestructionListener
[inline]: {
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2DestructionListenerWrapper
[inline]: {
[inline]: }
[inline]: ;
[inline]: [
[identifier]: JSImplementation
[inline]: =
[string]: "b2DestructionListenerWrapper"
[inline]: ]
[inline]: interface
[identifier]: JSDestructionListener
[inline]: {
[inline]: void
[identifier]: JSDestructionListener
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SayGoodbyeJoint
[inline]: (
[identifier]: b2Joint
[identifier]: joint
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SayGoodbyeFixture
[inline]: (
[identifier]: b2Fixture
[identifier]: joint
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2DistanceJoint
[inline]: {
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorA
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorB
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetLength
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetLength
[inline]: (
[inline]: float
[identifier]: length
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMinLength
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMinLength
[inline]: (
[inline]: float
[identifier]: minLength
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMaxLength
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMaxLength
[inline]: (
[inline]: float
[identifier]: maxLength
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetCurrentLength
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetStiffness
[inline]: (
[inline]: float
[identifier]: stiffness
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetStiffness
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetDamping
[inline]: (
[inline]: float
[identifier]: damping
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetDamping
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2DistanceJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2DistanceJointDef
[inline]: {
[inline]: void
[identifier]: b2DistanceJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Initialize
[inline]: (
[identifier]: b2Body
[identifier]: bodyA
[inline]: ,
[identifier]: b2Body
[identifier]: bodyB
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: anchorA
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: anchorB
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorA
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorB
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: length
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: minLength
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxLength
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: stiffness
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: damping
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2DistanceJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: enum
[identifier]: b2DrawFlag
[inline]: {
[string]: "b2Draw::e_shapeBit"
[inline]: ,
[string]: "b2Draw::e_jointBit"
[inline]: ,
[string]: "b2Draw::e_aabbBit"
[inline]: ,
[string]: "b2Draw::e_pairBit"
[inline]: ,
[string]: "b2Draw::e_centerOfMassBit"
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Draw
[inline]: {
[inline]: void
[identifier]: SetFlags
[inline]: (
[inline]: unsigned
[inline]: long
[identifier]: flags
[inline]: )
[inline]: ;
[inline]: unsigned
[inline]: long
[identifier]: GetFlags
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: AppendFlags
[inline]: (
[inline]: unsigned
[inline]: long
[identifier]: flags
[inline]: )
[inline]: ;
[inline]: void
[identifier]: ClearFlags
[inline]: (
[inline]: unsigned
[inline]: long
[identifier]: flags
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: [
[identifier]: JSImplementation
[inline]: =
[string]: "b2Draw"
[inline]: ]
[inline]: interface
[identifier]: JSDraw
[inline]: {
[inline]: void
[identifier]: JSDraw
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DrawPolygon
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2Vec2
[identifier]: vertices
[inline]: ,
[inline]: long
[identifier]: vertexCount
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Color
[identifier]: color
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DrawSolidPolygon
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2Vec2
[identifier]: vertices
[inline]: ,
[inline]: long
[identifier]: vertexCount
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Color
[identifier]: color
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DrawCircle
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: center
[inline]: ,
[inline]: float
[identifier]: radius
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Color
[identifier]: color
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DrawSolidCircle
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: center
[inline]: ,
[inline]: float
[identifier]: radius
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: axis
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Color
[identifier]: color
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DrawSegment
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: p1
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: p2
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Color
[identifier]: color
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DrawTransform
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Transform
[identifier]: xf
[inline]: )
[inline]: ;
[inline]: void
[identifier]: DrawPoint
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: p
[inline]: ,
[inline]: float
[identifier]: size
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Color
[identifier]: color
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2FrictionJoint
[inline]: {
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorA
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorB
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMaxForce
[inline]: (
[inline]: float
[identifier]: force
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMaxForce
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMaxTorque
[inline]: (
[inline]: float
[identifier]: torque
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMaxTorque
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2FrictionJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2FrictionJointDef
[inline]: {
[inline]: void
[identifier]: b2FrictionJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Initialize
[inline]: (
[identifier]: b2Body
[identifier]: bodyA
[inline]: ,
[identifier]: b2Body
[identifier]: bodyB
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: anchor
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorA
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorB
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxForce
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxTorque
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2FrictionJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: interface
[identifier]: b2GearJoint
[inline]: {
[identifier]: b2Joint
[identifier]: GetJoint1
[inline]: (
[inline]: )
[inline]: ;
[identifier]: b2Joint
[identifier]: GetJoint2
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetRatio
[inline]: (
[inline]: float
[identifier]: ratio
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetRatio
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2GearJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2GearJointDef
[inline]: {
[inline]: void
[identifier]: b2GearJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[identifier]: b2Joint
[identifier]: joint1
[inline]: ;
[inline]: attribute
[identifier]: b2Joint
[identifier]: joint2
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: ratio
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2GearJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: interface
[identifier]: b2JointEdge
[inline]: {
[inline]: void
[identifier]: b2JointEdge
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[identifier]: b2Body
[identifier]: other
[inline]: ;
[inline]: attribute
[identifier]: b2Joint
[identifier]: joint
[inline]: ;
[inline]: attribute
[identifier]: b2JointEdge
[identifier]: prev
[inline]: ;
[inline]: attribute
[identifier]: b2JointEdge
[identifier]: next
[inline]: ;
[inline]: }
[inline]: ;
[inline]: enum
[identifier]: b2ManifoldType
[inline]: {
[string]: "b2Manifold::e_circles"
[inline]: ,
[string]: "b2Manifold::e_faceA"
[inline]: ,
[string]: "b2Manifold::e_faceB"
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Manifold
[inline]: {
[inline]: void
[identifier]: b2Manifold
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ,
[identifier]: BoundsChecked
[inline]: ]
[inline]: attribute
[identifier]: b2ManifoldPoint
[inline]: [
[inline]: ]
[identifier]: points
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localNormal
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localPoint
[inline]: ;
[inline]: attribute
[identifier]: b2ManifoldType
[identifier]: type
[inline]: ;
[inline]: attribute
[inline]: long
[identifier]: pointCount
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2WorldManifold
[inline]: {
[inline]: void
[identifier]: b2WorldManifold
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Initialize
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ]
[identifier]: b2Manifold
[identifier]: manifold
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Transform
[identifier]: xfA
[inline]: ,
[inline]: float
[identifier]: radiusA
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Transform
[identifier]: xfB
[inline]: ,
[inline]: float
[identifier]: radiusB
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: normal
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ,
[identifier]: BoundsChecked
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[inline]: [
[inline]: ]
[identifier]: points
[inline]: ;
[inline]: [
[identifier]: BoundsChecked
[inline]: ]
[inline]: attribute
[inline]: float
[inline]: [
[inline]: ]
[identifier]: separations
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2ManifoldPoint
[inline]: {
[inline]: void
[identifier]: b2ManifoldPoint
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localPoint
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: normalImpulse
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: tangentImpulse
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2ContactID
[identifier]: id
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Mat22
[inline]: {
[inline]: void
[identifier]: b2Mat22
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: b2Mat22
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: c1
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: c2
[inline]: )
[inline]: ;
[inline]: void
[identifier]: b2Mat22
[inline]: (
[inline]: float
[identifier]: a11
[inline]: ,
[inline]: float
[identifier]: a12
[inline]: ,
[inline]: float
[identifier]: a21
[inline]: ,
[inline]: float
[identifier]: a22
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Set
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: c1
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: c2
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetIdentity
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetZero
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Mat22
[identifier]: GetInverse
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: Solve
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: b
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: ex
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: ey
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Mat33
[inline]: {
[inline]: void
[identifier]: b2Mat33
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: b2Mat33
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec3
[identifier]: c1
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec3
[identifier]: c2
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec3
[identifier]: c3
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetZero
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec3
[identifier]: Solve33
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec3
[identifier]: b
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: Solve22
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: b
[inline]: )
[inline]: ;
[inline]: void
[identifier]: GetInverse22
[inline]: (
[identifier]: b2Mat33
[identifier]: M
[inline]: )
[inline]: ;
[inline]: void
[identifier]: GetSymInverse33
[inline]: (
[identifier]: b2Mat33
[identifier]: M
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec3
[identifier]: ex
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec3
[identifier]: ey
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec3
[identifier]: ez
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2MouseJoint
[inline]: {
[inline]: void
[identifier]: SetTarget
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: target
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetTarget
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMaxForce
[inline]: (
[inline]: float
[identifier]: force
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMaxForce
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetStiffness
[inline]: (
[inline]: float
[identifier]: stiffness
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetStiffness
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetDamping
[inline]: (
[inline]: float
[identifier]: damping
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetDamping
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2MouseJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2MouseJointDef
[inline]: {
[inline]: void
[identifier]: b2MouseJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: target
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxForce
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: stiffness
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: damping
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2MouseJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: interface
[identifier]: b2PolygonShape
[inline]: {
[inline]: void
[identifier]: b2PolygonShape
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Set
[inline]: (
[identifier]: b2Vec2
[identifier]: vertices
[inline]: ,
[inline]: long
[identifier]: vertexCount
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetAsBox
[inline]: (
[inline]: float
[identifier]: hx
[inline]: ,
[inline]: float
[identifier]: hy
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetAsBox
[inline]: (
[inline]: float
[identifier]: hx
[inline]: ,
[inline]: float
[identifier]: hy
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: center
[inline]: ,
[inline]: float
[identifier]: angle
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: m_centroid
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ,
[identifier]: BoundsChecked
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[inline]: [
[inline]: ]
[identifier]: m_vertices
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ,
[identifier]: BoundsChecked
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[inline]: [
[inline]: ]
[identifier]: m_normals
[inline]: ;
[inline]: attribute
[inline]: long
[identifier]: m_count
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2PolygonShape
[identifier]: implements
[identifier]: b2Shape
[inline]: ;
[inline]: interface
[identifier]: b2PrismaticJoint
[inline]: {
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorA
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorB
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAxisA
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetReferenceAngle
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetJointTranslation
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetJointSpeed
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsLimitEnabled
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: EnableLimit
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetLowerLimit
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetUpperLimit
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetLimits
[inline]: (
[inline]: float
[identifier]: lower
[inline]: ,
[inline]: float
[identifier]: upper
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsMotorEnabled
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: EnableMotor
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMotorSpeed
[inline]: (
[inline]: float
[identifier]: speed
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMotorSpeed
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMaxMotorForce
[inline]: (
[inline]: float
[identifier]: force
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMaxMotorForce
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMotorForce
[inline]: (
[inline]: float
[identifier]: inv_dt
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2PrismaticJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2PrismaticJointDef
[inline]: {
[inline]: void
[identifier]: b2PrismaticJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Initialize
[inline]: (
[identifier]: b2Body
[identifier]: bodyA
[inline]: ,
[identifier]: b2Body
[identifier]: bodyB
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: anchor
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: axis
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorA
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorB
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAxisA
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: referenceAngle
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: enableLimit
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: lowerTranslation
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: upperTranslation
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: enableMotor
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxMotorForce
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: motorSpeed
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2PrismaticJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: interface
[identifier]: b2Profile
[inline]: {
[inline]: attribute
[inline]: float
[identifier]: step
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: collide
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: solve
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: solveInit
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: solveVelocity
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: solvePosition
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: broadphase
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: solveTOI
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2PulleyJoint
[inline]: {
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetGroundAnchorA
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetGroundAnchorB
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetLengthA
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetLengthB
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetRatio
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetCurrentLengthA
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetCurrentLengthB
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2PulleyJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2PulleyJointDef
[inline]: {
[inline]: void
[identifier]: b2PulleyJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Initialize
[inline]: (
[identifier]: b2Body
[identifier]: bodyA
[inline]: ,
[identifier]: b2Body
[identifier]: bodyB
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: groundAnchorA
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: groundAnchorB
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: anchorA
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: anchorB
[inline]: ,
[inline]: float
[identifier]: ratio
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: groundAnchorA
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: groundAnchorB
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorA
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorB
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: lengthA
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: lengthB
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: ratio
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2PulleyJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: interface
[identifier]: b2RayCastInput
[inline]: {
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: p1
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: p2
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxFraction
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2RayCastOutput
[inline]: {
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: normal
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: fraction
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2RevoluteJoint
[inline]: {
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorA
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorB
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetReferenceAngle
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetJointAngle
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetJointSpeed
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsLimitEnabled
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: EnableLimit
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetLowerLimit
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetUpperLimit
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetLimits
[inline]: (
[inline]: float
[identifier]: lower
[inline]: ,
[inline]: float
[identifier]: upper
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsMotorEnabled
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: EnableMotor
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMotorSpeed
[inline]: (
[inline]: float
[identifier]: speed
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMotorSpeed
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMaxMotorTorque
[inline]: (
[inline]: float
[identifier]: torque
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMaxMotorTorque
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMotorTorque
[inline]: (
[inline]: float
[identifier]: inv_dt
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2RevoluteJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2RevoluteJointDef
[inline]: {
[inline]: void
[identifier]: b2RevoluteJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Initialize
[inline]: (
[identifier]: b2Body
[identifier]: bodyA
[inline]: ,
[identifier]: b2Body
[identifier]: bodyB
[inline]: ,
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: anchor
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorA
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorB
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: referenceAngle
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: enableLimit
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: lowerAngle
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: upperAngle
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: enableMotor
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: motorSpeed
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxMotorTorque
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2RevoluteJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: interface
[identifier]: b2Rot
[inline]: {
[inline]: void
[identifier]: b2Rot
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: b2Rot
[inline]: (
[inline]: float
[identifier]: angle
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Set
[inline]: (
[inline]: float
[identifier]: angle
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetIdentity
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetAngle
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetXAxis
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetYAxis
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: s
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: c
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2WheelJoint
[inline]: {
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorA
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAnchorB
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLocalAxisA
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetJointTranslation
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetJointLinearSpeed
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetJointAngle
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetJointAngularSpeed
[inline]: (
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsLimitEnabled
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: EnableLimit
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetLowerLimit
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetUpperLimit
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetLimits
[inline]: (
[inline]: float
[identifier]: lower
[inline]: ,
[inline]: float
[identifier]: upper
[inline]: )
[inline]: ;
[inline]: boolean
[identifier]: IsMotorEnabled
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: EnableMotor
[inline]: (
[inline]: boolean
[identifier]: flag
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMotorSpeed
[inline]: (
[inline]: float
[identifier]: speed
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMotorSpeed
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMaxMotorTorque
[inline]: (
[inline]: float
[identifier]: torque
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMaxMotorTorque
[inline]: (
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMotorTorque
[inline]: (
[inline]: float
[identifier]: inv_dt
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetStiffness
[inline]: (
[inline]: float
[identifier]: stiffness
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetStiffness
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetDamping
[inline]: (
[inline]: float
[identifier]: damping
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetDamping
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2WheelJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2WheelJointDef
[inline]: {
[inline]: void
[identifier]: b2WheelJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Initialize
[inline]: (
[identifier]: b2Body
[identifier]: bodyA
[inline]: ,
[identifier]: b2Body
[identifier]: bodyB
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: anchor
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: axis
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorA
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAnchorB
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: localAxisA
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: enableLimit
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: lowerTranslation
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: upperTranslation
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: enableMotor
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxMotorTorque
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: motorSpeed
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: stiffness
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: damping
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2WheelJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: interface
[identifier]: b2MotorJoint
[inline]: {
[inline]: void
[identifier]: SetLinearOffset
[inline]: (
[inline]: [
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: linearOffset
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: GetLinearOffset
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetAngularOffset
[inline]: (
[inline]: float
[identifier]: angularOffset
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetAngularOffset
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMaxForce
[inline]: (
[inline]: float
[identifier]: force
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMaxForce
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetMaxTorque
[inline]: (
[inline]: float
[identifier]: torque
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetMaxTorque
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetCorrectionFactor
[inline]: (
[inline]: float
[identifier]: factor
[inline]: )
[inline]: ;
[inline]: float
[identifier]: GetCorrectionFactor
[inline]: (
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2MotorJoint
[identifier]: implements
[identifier]: b2Joint
[inline]: ;
[inline]: interface
[identifier]: b2MotorJointDef
[inline]: {
[inline]: void
[identifier]: b2MotorJointDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Initialize
[inline]: (
[identifier]: b2Body
[identifier]: bodyA
[inline]: ,
[identifier]: b2Body
[identifier]: bodyB
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: linearOffset
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: angularOffset
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxForce
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: maxTorque
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: correctionFactor
[inline]: ;
[inline]: }
[inline]: ;
[identifier]: b2MotorJointDef
[identifier]: implements
[identifier]: b2JointDef
[inline]: ;
[inline]: enum
[identifier]: b2PointState
[inline]: {
[string]: "b2_nullState"
[inline]: ,
[string]: "b2_addState"
[inline]: ,
[string]: "b2_persistState"
[inline]: ,
[string]: "b2_removeState"
[inline]: }
[inline]: ;
[inline]: enum
[identifier]: b2StretchingModel
[inline]: {
[string]: "b2_pbdStretchingModel"
[inline]: ,
[string]: "b2_xpbdStretchingModel"
[inline]: }
[inline]: ;
[inline]: enum
[identifier]: b2BendingModel
[inline]: {
[string]: "b2_springAngleBendingModel"
[inline]: ,
[string]: "b2_pbdAngleBendingModel"
[inline]: ,
[string]: "b2_xpbdAngleBendingModel"
[inline]: ,
[string]: "b2_pbdDistanceBendingModel"
[inline]: ,
[string]: "b2_pbdHeightBendingModel"
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2RopeTuning
[inline]: {
[inline]: void
[identifier]: b2RopeTuning
[inline]: (
[inline]: )
[inline]: ;
[inline]: attribute
[identifier]: b2StretchingModel
[identifier]: stretchingModel
[inline]: ;
[inline]: attribute
[identifier]: b2BendingModel
[identifier]: bendingModel
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: damping
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: stretchStiffness
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: stretchHertz
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: stretchDamping
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: bendStiffness
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: bendHertz
[inline]: ;
[inline]: attribute
[inline]: float
[identifier]: bendDamping
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: isometric
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: fixedEffectiveMass
[inline]: ;
[inline]: attribute
[inline]: boolean
[identifier]: warmStart
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2RopeDef
[inline]: {
[inline]: void
[identifier]: b2RopeDef
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: position
[inline]: ;
[inline]: attribute
[identifier]: b2Vec2
[identifier]: vertices
[inline]: ;
[inline]: attribute
[inline]: long
[identifier]: count
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: gravity
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2RopeTuning
[identifier]: tuning
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2Rope
[inline]: {
[inline]: void
[identifier]: b2Rope
[inline]: (
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Create
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2RopeDef
[identifier]: def
[inline]: )
[inline]: ;
[inline]: void
[identifier]: SetTuning
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2RopeTuning
[identifier]: tuning
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Step
[inline]: (
[inline]: float
[identifier]: timeStep
[inline]: ,
[inline]: long
[identifier]: iterations
[inline]: ,
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: position
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Reset
[inline]: (
[inline]: [
[identifier]: Const
[inline]: ,
[identifier]: Ref
[inline]: ]
[identifier]: b2Vec2
[identifier]: position
[inline]: )
[inline]: ;
[inline]: void
[identifier]: Draw
[inline]: (
[identifier]: b2Draw
[identifier]: draw
[inline]: )
[inline]: ;
[inline]: }
[inline]: ;
[inline]: interface
[identifier]: b2ClipVertex
[inline]: {
[inline]: void
[identifier]: b2ClipVertex
[inline]: (
[inline]: )
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2Vec2
[identifier]: v
[inline]: ;
[inline]: [
[identifier]: Value
[inline]: ]
[inline]: attribute
[identifier]: b2ContactID
[identifier]: id
[inline]: ;
[inline]: }
[inline]: ;
[eof]: 
